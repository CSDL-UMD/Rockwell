extends ui_layout_no
block content

  //-Change this URI to a CDN you are using for Photos
  -var cdn = "";
  .computer.only.tablet.only.four.wide.column 
    .ui.card
      .image
        if user.profile.picture
          img(src='/user_post/'+user.profile.picture)
        else
          img(src=user.gravatar(60))
      .content
        a.header(href='/me')= user.profile.name || user.username || user.id
        .meta="@"+user.username
        .description=user.profile.bio
        .description
          if user.profile.location
            i.marker.icon
            span=user.profile.location
      .one.ui.bottom.attached.icon.buttons
          button.ui.editprofile.button(data-tooltip='Update Your Profile', data-position='bottom left')
            i.write.icon

  #loading.eight.wide.computer.ten.wide.tablet.sixteen.wide.mobile.column
    img.ui.centered.small.image(src='/public/heart.svg')
  #content.eight.wide.computer.ten.wide.tablet.sixteen.wide.mobile.column(style='display: none;')
    //-.ui.active.dimmer.feed
      .ui.large.text.loader Loading
    //- Input for creating new post at top of feed
    #newpost.ui.fluid.left.labeled.right.icon.input
      .ui.label
        if user.profile.picture
          img.ui.avatar.image(src='/user_post/'+user.profile.picture)
        else
          img.ui.avatar.image(src=user.gravatar(60))
      input(type='text', placeholder='Share your meal')
      i.big.photo.link.icon
  
    each val in script
      //- create a card for each post in val (if by user make the card a little different)
      //- if val.relativeTime - then post came from user_post (so user post, user reply to actor reply to user post)
      if val.relativeTime
        -var u_class;
        -if (val.actorAuthor) {u_class = "actorReply"}
        -else if (val.reply) {u_class = "userReply"}
        -else {u_class = "userPost"}
        .ui.fluid.card(u_postID=val.id, type=u_class, postID=val.postID)
          
          //- This is a User made post
          .content
            .right.floated.time.meta= (user.createdAt.getTime() + val.relativeTime)
            |  
            a.ui.avatar.image(href='/me')
              if user.profile.picture
                img(src='/user_post/'+user.profile.picture)
              else
                img(src=user.gravatar(60))
            a(href='/me')
              span=user.profile.name || user.username || user.id
          .image
            img(src='/user_post/'+val.picture)
          .content
            .description=val.body
          .two.ui.bottom.attached.icon.buttons
            .ui.reply.button(tabindex='0')
              i.reply.icon
              |  Reply
            if val.liked
              .ui.red.like.button
                i.heart.icon
                |  Like
            else
              .ui.like.button
                i.heart.icon
                |  Like
          if val.comments.length > 0
            .content
              .ui.comments
                each comment in val.comments
                  //-IF this comment is USER made, do this
                  if (user.createdAt.getTime() + comment.time) < Date.now()
                    if !comment.flagged
                      if comment.new_comment
                        -console.log("New COMMENT AREA");
                        .comment(commentID=comment.commentID)
                          a.avatar.image(href='/me')
                            if user.profile.picture
                              img(src='/user_post/'+user.profile.picture)
                            else
                              img(src=user.gravatar(60))
                          .content
                            a.author(href='/me')=user.profile.name || user.username || user.id
                            .metadata
                              span.date=(user.createdAt.getTime() + comment.time)
                              .rating
                                if comment.liked
                                  i.red.heart.icon
                                  span=comment.likes
                                  | Likes 
                                else
                                  i.heart.icon
                                  span.num=comment.likes
                                  |  Likes
                            .text=comment.body
                            .actions
                              if comment.liked
                                a.red.like.comment Like
                              else
                                a.like.comment Like
                              a.flag.comment Flag
                      //- Else this is a normal comment from the script
                      else
                        .comment(commentID=comment.commentID)
                          a.avatar(href='/user/'+comment.actor.username)
                            //-img(src=cdn+'/profile_pictures/'+comment.actor.profile.picture)
                            img.lazyload(data-src=cdn+"/profile_pictures/"+comment.actor.profile.picture)
                          .content
                            a.author(href='/user/'+comment.actor.username)=comment.actor.profile.name
                            .metadata
                              span.date=(user.createdAt.getTime() + comment.time)
                              .rating
                                if comment.liked
                                  i.red.heart.icon
                                  span=comment.likes
                                  | Likes 
                                else
                                  i.heart.icon
                                  span.num=comment.likes
                                  |  Likes
                            .text=comment.body
                            .actions
                              if comment.liked
                                a.red.like.comment Like
                              else
                                a.like.comment Like
                              a.flag.comment Flag
          .extra.content
            .ui.fluid.left.labeled.right.icon.input
              .ui.label
                if user.profile.picture
                  img.ui.avatar.image(src='/user_post/'+user.profile.picture, name=user.profile.name || user.username || user.id)
                else
                  img.ui.avatar.image(src=user.gravatar(60), name=user.profile.name || user.username || user.id)            
              input.newcomment(type='text', placeholder='Write a Comment')
              i.big.send.link.icon

      //-THIS is for posts by Actors, not the USER
      else
        .ui.fluid.card.dim(postID=val.id, state=val.state || 'unread', type='actor', actor_un = val.actor.username, actor_name = val.actor.profile.name, actor_pic = val.actor.profile.picture)
          //- dimmer DIV for flagging
          .ui.dimmer.flag
                .content
                  .center
                    h2.ui.inverted.icon.header
                      i.red.flag.icon
                      |  You&apos;ve flagged this!
                      h3.ui.inverted.header
                        span="The admins will review this post further. We are sorry you had this experience."
          //- Normal Base Post
          .content
            .right.floated.time.meta= (Date.now() + val.time)
            |  
            //-a(href='/user/'+val.actor.username)
              img.ui.avatar.image(src=cdn+'/profile_pictures/'+val.actor.profile.picture, style="margin-left: -1px; margin-top: -5px; border-radius: 50%; width: 48px; height: 48px;")
              span(style="margin-left: 4px; margin-top: 19px; min-width: 85px; height: 17px; font-family: HelveticaNeue; font-size: 16px; font-weight: 500; font-style: normal; font-stretch: normal; line-height: normal; letter-spacing: -0.6px; color: #000000;")=val.actor.profile.name
              span(style="margin-left: 4px; margin-top: 19px; min-width: 85px; height: 17px; font-family: HelveticaNeue; font-size: 16px; font-weight: 500; font-style: normal; font-stretch: normal; line-height: normal; letter-spacing: -0.6px; color: #909090;")="@"+val.actor.username
            a(href='/user/'+val.actor.username)     
              img.ui.avatar.image.lazyload(data-src=cdn+"/profile_pictures/"+val.actor.profile.picture, style="margin-left: -1x; margin-top: -5px; border-radius: 50%; width: 48px; height: 48px;")
              span(style="margin-left: 4px; margin-top: 19px; min-width: 85px; height: 17px; font-family: HelveticaNeue; font-size: 16px; font-weight: 500; font-style: normal; font-stretch: normal; line-height: normal; letter-spacing: -0.6px; color: #000000;")=val.actor.profile.name
              span(style="margin-left: 4px; margin-top: 19px; min-width: 85px; height: 17px; font-family: HelveticaNeue; font-size: 16px; font-weight: 500; font-style: normal; font-stretch: normal; line-height: normal; letter-spacing: -0.6px; color: #909090;")="@"+val.actor.username
          //-div(style="position: relative; z-index: 1;")
            img(src="image.png" style="position: absolute; z-index: 2;")
            span#overlay_text(style="position: relative; top: -10px; z-index: 3;") OVERLAY
          .content
            .description(style="margin-left: -8px; margin-bottom: -24px; width: 445px; height: 88px; font-family: HelveticaNeue; font-size: 16px; font-weight: 300;font-style: normal; font-stretch: normal; line-height: normal; letter-spacing: -0.6px; color: #000000;")=val.body
              if val.urls.length > 0
                a(href=val.urls)=" "+val.urls
          if val.picture.length > 0
            if val.picture_heading.length > 3
              .img.post
                a(href=val.urls)
                  //img.post(src="/"+val.picture)
                  //img(src='/public/picture.svg', data-src="/post_pictures/"+val.picture, style="max-width:100%;width:100%;")
                  img.lazyload(data-src=cdn+"/post_pictures/"+val.picture, style="max-width:100%;width:100%;")
              if val.picture_heading.length > 0
                .content
                  .description(style="font-weight: 1000; text-align: center")=val.picture_heading
              if val.picture_description.length > 0
                .content
                  .description=val.picture_description
          .three.ui.bottom.attached.icon.buttons
            .ui.reply.button(tabindex='0',onclick='retweet_clicked(\'' + val.tweet_id + '\')')
              i.reply.icon
              |  Retweet
            //if val.like
            //  .ui.labeled.button(tabindex='0',onclick='like_clicked(\'' + val.tweet_id + '\')')
            //    .ui.red.like.button
            //      i.heart.icon
            //      |  Like
            //    a.ui.basic.red.left.pointing.label=val.likes
            //else
            //  .ui.labeled.button(tabindex='0')
            //    .ui.like.button
            //      i.heart.icon
            //      |  Like
            //    a.ui.basic.red.left.pointing.label.count=val.likes
            .ui.reply.button(tabindex='0',onclick='like_clicked(\'' + val.tweet_id + '\')')
              i.reply.icon
              |  Like
            a.ui.basic.red.left.pointing.label.count=val.likes

    .ui.fluid.card
      .content
        .description
        |  End of Posts for the last 48 hours.
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    .ui.tiny.post.modal()
      i.close.icon
      .header Add a New Post
      .content
        form#postform.ui.feed.form(action='/post/new', method='POST', enctype='multipart/form-data')
          input(type='hidden', name='_csrf', value=_csrf)
          .field
            textarea(rows='2', placeholder='Share your meal', name='body')
          .field.image-upload
            label(for='picinput')
              .image.content
                img#imgInp.ui.fluid.image(src='/public/photo-camera.svg')
            //-input#picinput(type='file', accept='image/*', capture='camera', name='picinput')
            input#picinput(type='file', accept='image/*', name='picinput')
          .ui.error.message
      .actions
        input.ui.green.button(type='submit', name="foo", value='Submit', form='postform')
